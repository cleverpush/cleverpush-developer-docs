<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sdks on CleverPush Developer Docs</title>
    <link>/sdks/</link>
    <description>Recent content in Sdks on CleverPush Developer Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Apr 2017 16:43:08 +0100</lastBuildDate>
    
	<atom:link href="/sdks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android SDK</title>
      <link>/sdks/android/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/android/</guid>
      <description>Setup  Add the needed libraries to your app/build.gradle config under dependencies
dependencies { [...] implementation &amp;#39;com.cleverpush:cleverpush:0.5.6&amp;#39; }  The latest stable Android SDK version is 0.5.6
 Add the following tags to your AndroidManifest.xml file
&amp;lt;application ...&amp;gt; &amp;lt;service android:name=&amp;#34;com.cleverpush.service.CleverPushFcmListenerService&amp;#34;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;com.google.firebase.MESSAGING_EVENT&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/service&amp;gt; &amp;lt;service android:name=&amp;#34;com.cleverpush.service.CleverPushInstanceIDListenerService&amp;#34;&amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;com.google.firebase.INSTANCE_ID_EVENT&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/service&amp;gt; &amp;lt;/application&amp;gt;  Alternatively, you can also leave this &amp;lt;meta-data.. line out and specify the App&amp;rsquo;s Package Name in the CleverPush channel settings.</description>
    </item>
    
    <item>
      <title>Cordova SDK</title>
      <link>/sdks/cordova/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/cordova/</guid>
      <description>Intallation  Add the required Cordova plugin  cordova plugin add cleverpush-cordova-sdk  Setup iOS  Enable the required capabilities
 Go to your root project and switch to the tab &amp;ldquo;Capabilities&amp;rdquo;
 Enable &amp;ldquo;Push Notifications&amp;rdquo;
 Enable &amp;ldquo;Background Modes&amp;rdquo; and check &amp;ldquo;Remote notifications&amp;rdquo;
  Add Notification Service Extension
This is required for correctly tracking notification deliveries and for displaying big images or videos in notifications.
 Select File &amp;gt; New &amp;gt; Target in Xcode Choose Notification Service Extension and press Next Enter CleverPushNotificationServiceExtension as Product Name, choose Objective-C as language and press Finish Press Activate on the next prompt Add the following at the bottom of your Podfile</description>
    </item>
    
    <item>
      <title>Flutter SDK</title>
      <link>/sdks/flutter/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/flutter/</guid>
      <description>Installation  Add the following code to your pubspec.yaml file dependencies: cleverpush_flutter: ^1.0.0
 Run flutter packages get
  Setup iOS  Enable the required capabilities
 Go to your root project and switch to the tab &amp;ldquo;Capabilities&amp;rdquo;
 Enable &amp;ldquo;Push Notifications&amp;rdquo;
 Enable &amp;ldquo;Background Modes&amp;rdquo; and check &amp;ldquo;Remote notifications&amp;rdquo;
  Add Notification Service Extension
This is required for correctly tracking notification deliveries and for displaying big images or videos in notifications.</description>
    </item>
    
    <item>
      <title>JavaScript SDK</title>
      <link>/sdks/javascript/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/javascript/</guid>
      <description>We provide several JavaScript methods to make the integration into your website even easier.
Calls to the SDK are all made via an array-like push method. This ensures that also calls which are made before the Script even loads are added to a queue.
Please make sure that your personal CleverPush code is implemented on every site (&amp;lt;script src=&amp;quot;https://static.cleverpush.com/channel/loader/XXXXXX.js&amp;quot; async&amp;gt;&amp;lt;/script&amp;gt;).
Example:
CleverPush = window.CleverPush || []; CleverPush.push([&amp;#39;triggerOptIn&amp;#39;]);  Methods triggerOptIn Triggers the opt-in dialog.</description>
    </item>
    
    <item>
      <title>React Native SDK</title>
      <link>/sdks/react-native/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/react-native/</guid>
      <description>Installation  Install via npm or yarn npm i cleverpush-react-native -S
 Link + install native Dependencies for iOS react-native link
 Install Pods for iOS (may be not needed)
cd ios pod install  Setup iOS  Enable the required capabilities
 Go to your root project and switch to the tab &amp;ldquo;Capabilities&amp;rdquo;
 Enable &amp;ldquo;Push Notifications&amp;rdquo;
 Enable &amp;ldquo;Background Modes&amp;rdquo; and check &amp;ldquo;Remote notifications&amp;rdquo;
  Add Notification Service Extension</description>
    </item>
    
    <item>
      <title>Xamarin SDK</title>
      <link>/sdks/xamarin/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/xamarin/</guid>
      <description>Installation  Add the CleverPush NuGet Package dependencies: cleverpush_flutter: ^1.0.0  Setup iOS  Enable the required capabilities
 Go to your root project and switch to the tab &amp;ldquo;Capabilities&amp;rdquo;
 Enable &amp;ldquo;Push Notifications&amp;rdquo;
 Enable &amp;ldquo;Background Modes&amp;rdquo; and check &amp;ldquo;Remote notifications&amp;rdquo;
  Add Notification Service Extension
This is required for correctly tracking notification deliveries and for displaying big images or videos in notifications.
 Select File &amp;gt; New &amp;gt; Target in Xcode Choose Notification Service Extension and press Next Enter CleverPushNotificationServiceExtension as Product Name, choose Objective-C as language and press Finish Press Activate on the next prompt Add the following at the bottom of your Podfile</description>
    </item>
    
    <item>
      <title>iOS SDK</title>
      <link>/sdks/ios/</link>
      <pubDate>Mon, 10 Apr 2017 16:43:08 +0100</pubDate>
      
      <guid>/sdks/ios/</guid>
      <description>Installation  Add CleverPush to your Podfile
pod &amp;#39;CleverPush&amp;#39;, &amp;#39;~&amp;gt; 0.5.5&amp;#39; The latest stable iOS SDK version is 0.5.5
 Enable the required capabilities
 Go to your root project and switch to the tab &amp;ldquo;Capabilities&amp;rdquo; Enable &amp;ldquo;Push Notifications&amp;rdquo; Enable &amp;ldquo;Background Modes&amp;rdquo; and check &amp;ldquo;Remote notifications&amp;rdquo;  Add Notification Service Extension
This is required for correctly tracking notification deliveries and for displaying big images or videos in notifications.
 Select File &amp;gt; New &amp;gt; Target in Xcode Choose Notification Service Extension and press Next Enter CleverPushNotificationServiceExtension as Product Name, choose Objective-C as language and press Finish Press Activate on the next prompt Add the following at the bottom of your Project&amp;rsquo;s Podfile</description>
    </item>
    
  </channel>
</rss>